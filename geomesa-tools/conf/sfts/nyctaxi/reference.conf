geomesa {
  sfts {
    nyctaxi = {
      type-name = "nyctaxi"
      attributes = [
        { name = "trip_id", type = String, index = true }
        { name = "medallion", type = Integer }
        { name = "hack_license", type = Integer }
        { name = "vender_id", type = String }
        { name = "rate_code", type = String }
        { name = "pickup_dropoff", type = String }
        { name = "dtg", type = Date }
        { name = "geom", type = Point, srid = 4326, index = true }
      ]
      user-data = {
        geomesa.table.sharing = "false"
      }
    }
    // alternative: both pickup and dropoff points in a single feature
    nyctaxi-single = {
      type-name = "nyctaxi-single"
      attributes = [
        { name = "trip_id", type = String, index = true }
        { name = "medallion", type = Integer }
        { name = "hack_license", type = Integer }
        { name = "vender_id", type = String }
        { name = "rate_code", type = String }
        { name = "pickup_dtg", type = Date, index = true }
        { name = "pickup_point", type = Point, srid = 4326, index = true }
        { name = "dropoff_dtg", type = Date, default = true }
        { name = "dropoff_point", type = Point, srid = 4326, default = true }
      ]
      user-data = {
        geomesa.table.sharing = "false"
      }
    }
  }  
  converters {
    // default converter is the pickup point only
    nyctaxi = {
      type = "delimited-text"
      format = "CSV"
      id-field = "$trip_segment_id"
      options {
        skip-lines = 1 // header per file
      }
      fields = [
        { name = "trip_segment_id", transform = "md5(stringToBytes(concatenate($0, ',pickup')))"}
        { name = "trip_id", transform = "md5(stringToBytes($0))" }
        { name = "medallion", transform = "$1::integer" }
        { name = "hack_license", transform = "$2::integer" }
        { name = "vender_id", transform = "$3" }
        { name = "rate_code", transform = "$4" }
        { name = "pickup_dropoff", transform = "'pickup'" }
        { name = "dtg", transform = "date('yyyy-MM-dd HH:mm:ss', $6)" } // for pickup $6, dropoff $7
        { name = "geom", transform = "point($11::double, $12::double)" } // for pickup $11,$12; for dropoff $13,$14
      ]
    }
    nyctaxi-drop = {
      type = "delimited-text"
      format = "CSV"
      id-field = "$trip_segment_id"
      options {
        skip-lines = 1 // header per file
      }
      fields = [
        { name = "trip_segment_id", transform = "md5(stringToBytes(concatenate($0, ',dropoff')))"}
        { name = "trip_id", transform = "md5(stringToBytes($0))" }
        { name = "medallion", transform = "$1::integer" }
        { name = "hack_license", transform = "$2::integer" }
        { name = "vender_id", transform = "$3" }
        { name = "rate_code", transform = "$4" }
        { name = "pickup_dropoff", transform = "'dropoff'" }
        { name = "dtg", transform = "date('yyyy-MM-dd HH:mm:ss', $7)" } // for pickup $6, dropoff $7
        { name = "geom", transform = "point($13::double, $14::double)" } // for pickup $11,$12; for dropoff $13,$14
      ]
    }
    nyctaxi-single = {
      type = "delimited-text"
      format = "CSV"
      id-field = "$trip_id"
      options {
        skip-lines = 1 // header per file
      }
      fields = [
        { name = "trip_id", transform = "md5(stringToBytes($0))" }
        { name = "medallion", transform = "$1::integer" }
        { name = "hack_license", transform = "$2::integer" }
        { name = "vender_id", transform = "$3" }
        { name = "rate_code", transform = "$4" }
        { name = "pickup_dtg", transform = "date('yyyy-MM-dd HH:mm:ss', $6)" }
        { name = "pickup_point", transform = "point($11::double, $12::double)" }
        { name = "dropoff_dtg", transform = "date('yyyy-MM-dd HH:mm:ss', $7)" }
        { name = "dropoff_point", transform = "point($13::double, $14::double)" }
      ]
    }
  }
}
