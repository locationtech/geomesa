<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--********************************************************************
* Copyright (c) 2013-2020 Commonwealth Computer Research, Inc.
* All rights reserved. This program and the accompanying materials
* are made available under the terms of the Apache License, Version 2.0 which
* accompanies this distribution and is available at
* http://www.opensource.org/licenses/apache2.0.php.
*********************************************************************-->

<!-- Do not modify this file directly. Instead, copy entries that you    -->
<!-- wish to modify from this file into geomesa-site.xml and change      -->
<!-- them there.  If geomesa-site.xml does not already exist, create it. -->

<!-- If you wish a configuration item to always take precedence, even    -->
<!-- over system properties set through command line parameters change   -->
<!-- the <final> tag to true.                                            -->

<!-- By default, configuration properties with empty values will not be  -->
<!-- applied, you can change this by marking a property as final.        -->

<configuration>
    <property>
        <name>geomesa.convert.scripts.path</name>
        <value></value>
        <description>A colon separated list of paths containing files to be loaded
            onto the classpath. This is useful for getting scripts onto the classpath
            for use by map-reduce ingest jobs.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.audit.provider.impl</name>
        <value></value>
        <description>Fully-qualified classname of the implementation of the
            audit provider interface to use.
        </description>
        <final>false</final>
    </property>

    <!-- geomesa.batchwriter
    These properties map directly to the underlying Accumulo BatchWriter configurations. See
    https://accumulo.apache.org/1.7/apidocs/org/apache/accumulo/core/client/BatchWriterConfig.html#setMaxLatency(long,%20java.util.concurrent.TimeUnit)
    https://accumulo.apache.org/1.7/apidocs/org/apache/accumulo/core/client/BatchWriterConfig.html#setMaxWriteThreads(int)
    https://accumulo.apache.org/1.7/apidocs/org/apache/accumulo/core/client/BatchWriterConfig.html#setMaxMemory(long)
    https://accumulo.apache.org/1.7/apidocs/org/apache/accumulo/core/client/BatchWriterConfig.html#setTimeout(long,%20java.util.concurrent.TimeUnit)
    -->

    <property>
        <name>geomesa.batchwriter.latency</name>
        <value>60 seconds</value>
        <description>
            https://accumulo.apache.org/1.7/apidocs/org/apache/accumulo/core/client/BatchWriterConfig.html#setMaxLatency(long,%20java.util.concurrent.TimeUnit)
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.batchwriter.maxthreads</name>
        <value>10</value>
        <description>
            https://accumulo.apache.org/1.7/apidocs/org/apache/accumulo/core/client/BatchWriterConfig.html#setMaxWriteThreads(int)
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.batchwriter.memory</name>
        <value>52428800b</value>
        <description>
            https://accumulo.apache.org/1.7/apidocs/org/apache/accumulo/core/client/BatchWriterConfig.html#setMaxMemory(long)
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.batchwriter.timeout</name>
        <value></value>
        <description>
            https://accumulo.apache.org/1.7/apidocs/org/apache/accumulo/core/client/BatchWriterConfig.html#setTimeout(long,%20java.util.concurrent.TimeUnit)
        </description>
        <final>false</final>
    </property>

    <!-- /geomesa.batchwriter -->

    <property>
        <name>geomesa.mapreduce.splits.max</name>
        <value></value>
        <description>Set the absolute number of splits instead of basing it on the number of tablet servers.
            Setting this value overrides geomesa.mapreduce.splits.tserver.max.

            Making this value final without setting a value greater than zero may cause unexpected issues.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.mapreduce.splits.tserver.max</name>
        <value></value>
        <description>Set the max number of splits per tablet server when configuring a mapper. By default this value is
            calculated using Accumulo's AbstractInputFormat.getSplits method which creates a split for each range. In
            some scenarios this may create an undesirably large number of splits.

            This value is overwritten by geomesa.mapreduce.splits.max if it is set.

            Making this value final without setting a value greater than zero may cause unexpected issues.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.convert.config.urls</name>
        <value></value>
        <description></description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.feature.id-generator</name>
        <value>org.locationtech.geomesa.utils.uuid.Z3FeatureIdGenerator</value>
        <description>This property controls the default implementation used
            for generating IDs for simple features, if `USE_PROVIDED_FIDS`
            or `PROVIDED_FID` is not set in the feature. It should be set to
            the fully-qualified class name for a class implementing
            `org.locationtech.geomesa.utils.uuid.FeatureIdGenerator`.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.force.count</name>
        <value>false</value>
        <description>This property controls how GeoMesa calculates the size
            of a result set (e.g. `FeatureSource.getCount`). By default,
            Geomesa will estimate the size of a result set using statistics.
            This will provide a rough estimate very quickly. Some
            applications rely on knowing the exact size of a result set up
            front, so estimates will cause problems. To force geomesa to
            calculate the exact size of a result set, you may set the system
            property "geomesa.force.count" to "true". You may also override
            this behavior on a per-query basis by using the query hint
            `org.locationtech.geomesa.accumulo.index.QueryHints.EXACT_COUNT`.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.query.cost.type</name>
        <value></value>
        <description>This property controls how GeoMesa performs query
            planning. By default, GeoMesa will does cost-based query planning
            using data statistics to determine the best index for a given
            query. As a fallback option, this property may be set to "index"
            to use heuristic-based query planning. This may also be overridden
            on a per-query basis using the query hint
            `org.locationtech.geomesa.accumulo.index.QueryHints.COST_EVALUATION_KEY`
            set to either `org.locationtech.geomesa.accumulo.index.QueryPlanner.CostEvaluation.Stats`
            or `org.locationtech.geomesa.accumulo.index.QueryPlanner.CostEvaluation.Index`.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.strategy.decider</name>
        <value></value>
        <description>This property allows for overriding strategy selection during query
            planning. It should specify the full class name for a class implementing
            `org.locationtech.geomesa.index.planning.StrategyDecider`. The class must
            have a no-arg constructor.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.query.timeout</name>
        <value></value>
        <description>This property can be used to prevent long-running
            queries from overloading the system. When set, queries will be
            closed after the timeout, even if not all results have been
            returned yet. The timeout is specified as a duration, e.g. '60 seconds'
            or '1 minute'.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.scan.block-full-table</name>
        <value></value>
        <description>
          This property will prevent full-table scans from executing. A full-table scan is any query that can't be
          constrained down using a search index, and thus requires scanning the entire data set. With large data sets,
          such a scan can last a long time and be resource intensive. The property is specified as a Boolean, i.e.
          "true" or "false".
          It is also possible to specify the full-table scan behavior for individual schemas. Use
          "geomesa.scan.&lt;type-name&gt;.block-full-table", where "&lt;type-name&gt;" is replaced with the schema name
          (e.g. "gdelt"). Properties set for an individual schema will take precedence over the globally-defined
          behavior.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.scan.ranges.target</name>
        <value>2000</value>
        <description>This property provides a rough upper-limit for the
            number of Accumulo ranges that will be generated for a single
            query. In general, more ranges will result in less non-relevant
            rows being scanned in Accumulo. However, too many ranges can
            overwhelm clients.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.query.decomposition.multiplier</name>
        <value>0</value> <!-- disabled by default -->
        <description>
            Sets the maximum decomposition of complex polygons into rectangular envelopes. Use '0' to disable
            decomposition.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.query.decomposition.bits</name>
        <value>20</value>
        <description>
            Sets a lower threshold on the size of the polygon decomposition envelopes. Must be between 1 and 63,
            inclusive, and must be an odd number. Specifies the number of bits of precision as per the GeoHash
            specification.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.metadata.expiry</name>
        <value>10 minutes</value>
        <description>This property controls how often simple feature type metadata
            is read from the underlying data store. Calls to ``updateSchema`` on a
            data store will not show up in other instances until the metadata cache
            has expired. The expiry is specified as a duration, e.g. '10 minutes'
            or '1 hour'.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.sft.config.urls</name>
        <value></value>
        <description></description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.stats.generate</name>
        <value></value>
        <description>This property controls whether GeoMesa will generate
            statistics during ingestion. This property will be used if a
            data store is not explicitly configured using the 'generateStats'
            parameter.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.stats.compact.interval</name>
        <value>1 hour</value>
        <description>This property controls how often the GeoMesa statistics
            table will be compacted, in milliseconds. GeoMesa tracks data
            statistics during ingestion, using an Accumulo combiner iterator
            to merge them at read time. If the table is not compacted, reads
            will become progressively slower. Note that each
            `AccumuloDataStore` will track compactions separately, so they
            may occur more often than this.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.cassandra.connection.timeout</name>
        <value>30 seconds</value>
        <description>This property controls the connection timeout for a Cassandra session</description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.cassandra.read.timeout</name>
        <value>30 seconds</value>
        <description>This property controls the read timeout for a Cassandra session</description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.hbase.remote.filtering</name>
        <value>true</value>
        <description>Enable usage of the server-side HBase Filters for GeoMesa. This requires installation
            of the HBase Distributed Runtime jar which enables pushdown predicates of ECQL filters to be executed
            on HBase Region Servers instead of in client code.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.hbase.coprocessor.path</name>
        <value></value>
        <description>HDFS or local path to GeoMesa-HBase Coprocessor JAR. If a local path is provided it must be the same for
            all region server. A path provided through the DataStore parameters will always override this property.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.hbase.wal.durability</name>
        <value>USE_DEFAULT</value>
        <description>HBase WAL durability setting. Available settings are:
            ASYNC_WAL: Write the Mutation to the WAL asynchronously
            FSYNC_WAL: Write the Mutation to the WAL synchronously and force the entries to disk.
            SKIP_WAL: Do not write the Mutation to the WAL
            SYNC_WAL: Write the Mutation to the WAL synchronously.
            USE_DEFAULT: If this is for tables durability, use HBase's global default value (SYNC_WAL).
            For addtional information see HBase docs. https://hbase.apache.org/apidocs/org/apache/hadoop/hbase/client/Durability.htm
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.hbase.client.scanner.caching.size</name>
        <value></value>
        <description>Set the number of rows for caching that will be passed to scanners. If not set, the Configuration setting HConstants.HBASE_CLIENT_SCANNER_CACHING will
            apply. Higher caching values will enable faster scanners but will use more memory.
        </description>
        <final>false</final>
    </property>

    <property>
        <name>geomesa.hbase.query.block.caching.enabled</name>
        <value>true</value>
        <description>Set whether blocks should be cached for this Scan. This is true by default.  When true, default settings of the table and family are used (this will never override caching blocks if the block cache is disabled for that family or entirely).
        </description>
        <final>false</final>
    </property>

</configuration>
