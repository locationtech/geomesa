name: eclipse-snapshots

on:
  push:
    branches:
      - main
      - '[0-9]+.[0-9]+.x'

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

env:
  MAVEN_CLI_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false --batch-mode

jobs:
  publish-eclipse-snapshots:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[maven-release-plugin] prepare release')"
    strategy:
      fail-fast: false
      matrix:
        version: [ "2.12", "2.13" ]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: 'temurin'
          java-version: '11'
      - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          key: ${{ hashFiles('**/pom.xml') }}-eclipse-snapshots-${{ matrix.version }}
          path: |
            ~/.m2/repository/
            build/zinc-0.3.15/
      - name: Create settings.xml
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>repo.eclipse.org</id>
                <username>${{ secrets.REPO_USERNAME }}</username>
                <password>${{ secrets.REPO_PASSWORD }}</password>
              </server>
            </servers>
          </settings>
          EOF
      - name: Set Scala version
        run: ./build/scripts/change-scala-version.sh ${{ matrix.version }}
      - name: Build with Maven
        run: ./build/mvn clean deploy -Peclipse -DskipTests -Dmaven.deploy.at.end=false $MAVEN_CLI_OPTS
      - name: Remove geomesa artifacts
        if: success() || failure()
        run: rm -rf ~/.m2/repository/org/locationtech/geomesa
      - name: Remove settings.xml
        if: success() || failure()
        run: rm ~/.m2/settings.xml
