name: build-and-test

on:
  workflow_call:
    inputs:
      scala-version:
        required: false
        type: string
        default: "2.12"
      # splitting up the tests in the accumulo-datastore module reduces the overall CI build time
      # tests are defined here as an input b/c 'matrix' doesn't have access to most other contexts (like env)
      accumulo-test-splits-1:
        required: false
        type: string
        default: >-
          AccumuloDataStoreTest,
          AccumuloDataStoreQueryTest,
          AccumuloDataStoreStatsTest,
          AttributeIndexStrategyTest,
          AccumuloDataStoreAlterSchemaTest,
          ArrowBatchIteratorTest,
          MultiIteratorTest,
          AccumuloDataStoreTransformsTest,
          ArrowDictionaryTest,
          VisibilitiesTest
      accumulo-test-splits-2:
        required: false
        type: string
        default: >-
          AccumuloDataStoreAttributeVisibilityTest,
          AttributeIndexFilteringIteratorTest,
          AccumuloPartitioningTest,
          AccumuloFeatureReaderTest,
          AccumuloDataStoreAtomicWriteTest,
          AttributeIndexValuesTest,
          TubeSelectProcessTest,
          AccumuloDataStoreColumnGroupsTest,
          ZIntervalTest,
          S2IndexTest,
          AccumuloFeatureWriterTest,
          KryoLazyStatsIteratorTest,
          AccumuloDataStoreSortTest,
          AccumuloDataStoreUuidTest,
          AccumuloDataStoreAuthTest,
          LiveAccumuloDataStoreTest,
          DensityIteratorTest,
          S3IndexTest

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

env:
  MAVEN_CLI_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false --batch-mode
  MAVEN_COMPILE_OPTS: -T4 -DskipTests -Dlicense.skip=true -Dmaven.assembly.skip=true
  MAVEN_SUREFIRE_OPTS: -Dtest.fork.count=1 -Dlicense.skip=true

jobs:
  compile:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: 'temurin'
          java-version: '17'
      - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          key: ${{ hashFiles('**/pom.xml') }}-compile-${{ inputs.scala-version }}
          path: ~/.m2/repository/
      - name: Set Scala version
        run: ./build/scripts/change-scala-version.sh ${{ inputs.scala-version }}
      - name: Build with Maven
        run: mvn clean install $MAVEN_CLI_OPTS $MAVEN_COMPILE_OPTS
      - name: Collect artifacts
        run: |
          mv ~/.m2/repository/org/locationtech/geomesa m2-geomesa
          tar -czf classes.tgz $(find . -path '*/target/classes' -o -path '*/target/test-classes' -type d | tr '\n' ' ')
      - name: Upload artifacts
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: classes-and-jars-${{ inputs.scala-version }}
          retention-days: 1
          path: |
            m2-geomesa
            classes.tgz
      - name: Remove geomesa artifacts
        if: success() || failure()
        run: rm -rf ~/.m2/repository/org/locationtech/geomesa
  unit-tests:
    name: unit-tests (${{ matrix.tests.name }})
    runs-on: ubuntu-latest
    needs: compile
    strategy:
      fail-fast: false
      matrix:
        tests:
          - name: accumulo-ds-1
            selector: -pl :geomesa-accumulo-datastore_${{ inputs.scala-version }} -Dtest="${{ inputs.accumulo-test-splits-1 }}"
          - name: accumulo-ds-2
            selector: -pl :geomesa-accumulo-datastore_${{ inputs.scala-version }} -Dtest="${{ inputs.accumulo-test-splits-2 }}"
          - name: accumulo-ds-3
            selector: -pl :geomesa-accumulo-datastore_${{ inputs.scala-version }} -Dtest.excludes="${{ inputs.accumulo-test-splits-1 }}, ${{ inputs.accumulo-test-splits-2 }}"
          - name: accumulo-other
            selector: -f geomesa-accumulo -pl -:geomesa-accumulo-datastore_${{ inputs.scala-version }}
          - name: arrow
            selector: -f geomesa-arrow
          - name: cassandra
            selector: -f geomesa-cassandra
          - name: convert
            selector: -f geomesa-convert
          - name: cqengine
            selector: -f geomesa-memory
          - name: features
            selector: -f geomesa-features
          - name: fs
            selector: -f geomesa-fs
          - name: gt-pg15
            selector: -f geomesa-gt -Dtest.postgis.docker.tag=15-3.4
          - name: gt-pg16
            selector: -f geomesa-gt -Dtest.postgis.docker.tag=16-3.5
          - name: gt-pg17
            selector: -f geomesa-gt -Dtest.postgis.docker.tag=17-3.5
          - name: hbase
            selector: -f geomesa-hbase
          - name: kafka
            selector: -f geomesa-kafka
          - name: lambda
            selector: -f geomesa-lambda
          - name: metrics
            selector: -f geomesa-metrics
          - name: process
            selector: -f geomesa-process
          - name: redis
            selector: -f geomesa-redis
          - name: spark
            selector: -f geomesa-spark
          - name: utils
            selector: -f geomesa-utils-parent
          - name: others
            selector: -pl geomesa-filter,geomesa-index-api,geomesa-jobs,geomesa-security,geomesa-tools,geomesa-z3
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Generate cache key
        env:
          MOD_SELECTOR: "${{ matrix.tests.selector }}"
        run: echo "MOD_SELECTOR=$(echo $MOD_SELECTOR | sed 's/[^a-zA-Z0-9_.-]/-/g' | head -c 256)" >> $GITHUB_ENV
      - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          key: ${{ hashFiles('**/pom.xml') }}-unit-tests-${{ inputs.scala-version }}-${{ env.MOD_SELECTOR }}
          path: ~/.m2/repository/
      - name: Set Scala version
        run: ./build/scripts/change-scala-version.sh ${{ inputs.scala-version }}
      - name: Download artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: classes-and-jars-${{ inputs.scala-version }}
      - name: Install artifacts
        run: |
          tar -xf classes.tgz
          mkdir -p ~/.m2/repository/org/locationtech/geomesa
          mv m2-geomesa/* ~/.m2/repository/org/locationtech/geomesa/
      - name: Unit tests
        id: test
        continue-on-error: true
        run: |
          set -o pipefail
          mvn surefire:test $MAVEN_CLI_OPTS $MAVEN_SUREFIRE_OPTS ${{ matrix.tests.selector }} | tee -a test.log
      - name: Unit tests (retry)
        id: test-retry
        if: steps.test.outcome=='failure'
        continue-on-error: true
        run: |
          set -o pipefail
          RESUME_FROM="$({ grep --text 'mvn <args> -rf ' test.log || test $? = 1; } | tail -n1 | sed 's/.*-rf/-rf/')"
          mvn surefire:test $MAVEN_CLI_OPTS $MAVEN_SUREFIRE_OPTS $RESUME_FROM ${{ matrix.tests.selector }} | tee -a test.log
      - name: Unit tests (retry)
        id: test-retry-retry
        if: steps.test-retry.outcome=='failure'
        run: |
          set -o pipefail
          RESUME_FROM="$({ grep --text 'mvn <args> -rf ' test.log || test $? = 1; } | tail -n1 | sed 's/.*-rf/-rf/')"
          mvn surefire:test $MAVEN_CLI_OPTS $MAVEN_SUREFIRE_OPTS $RESUME_FROM ${{ matrix.tests.selector }} | tee -a test.log
      - name: Remove geomesa artifacts
        if: success() || failure()
        run: rm -rf ~/.m2/repository/org/locationtech/geomesa
  integration-tests:
    needs: compile
    uses: ./.github/workflows/integration-tests.yml
    with:
      scala-version: ${{ inputs.scala-version }}
#  assemblies:
#    needs: compile

  javadocs:
    name: javadocs (${{ matrix.docs.name }})
    strategy:
      fail-fast: false
      matrix:
        docs:
          - name: 1
            selector: "-pl geomesa-utils-parent/geomesa-utils,geomesa-index-api,geomesa-convert/geomesa-convert-common,\
                       geomesa-features/geomesa-feature-common,geomesa-fs/geomesa-fs-storage/geomesa-fs-storage-common,\
                       geomesa-spark/geomesa-spark-jts,geomesa-tools,geomesa-features/geomesa-feature-kryo,\
                       geomesa-kafka/geomesa-kafka-datastore,geomesa-z3,geomesa-arrow/geomesa-arrow-gt,\
                       geomesa-accumulo/geomesa-accumulo-datastore,geomesa-fs/geomesa-fs-storage/geomesa-fs-storage-parquet,\
                       geomesa-metrics/geomesa-metrics-micrometer,geomesa-fs/geomesa-fs-storage/geomesa-fs-storage-orc,\
                       geomesa-features/geomesa-feature-exporters,geomesa-redis/geomesa-redis-datastore,\
                       geomesa-gt/geomesa-gt-partitioning,geomesa-hbase/geomesa-hbase-datastore,\
                       geomesa-cassandra/geomesa-cassandra-datastore"
          - name: 2
            selector: "-pl '!geomesa-utils-parent/geomesa-utils,!geomesa-index-api,!geomesa-convert/geomesa-convert-common,\
                       !geomesa-features/geomesa-feature-common,!geomesa-fs/geomesa-fs-storage/geomesa-fs-storage-common,\
                       !geomesa-spark/geomesa-spark-jts,!geomesa-tools,!geomesa-features/geomesa-feature-kryo,\
                       !geomesa-kafka/geomesa-kafka-datastore,!geomesa-z3,!geomesa-arrow/geomesa-arrow-gt,\
                       !geomesa-accumulo/geomesa-accumulo-datastore,!geomesa-fs/geomesa-fs-storage/geomesa-fs-storage-parquet,\
                       !geomesa-metrics/geomesa-metrics-micrometer,!geomesa-fs/geomesa-fs-storage/geomesa-fs-storage-orc,\
                       !geomesa-features/geomesa-feature-exporters,!geomesa-redis/geomesa-redis-datastore,\
                       !geomesa-gt/geomesa-gt-partitioning,!geomesa-hbase/geomesa-hbase-datastore,\
                       !geomesa-cassandra/geomesa-cassandra-datastore'"
    needs: compile
    uses: ./.github/workflows/javadocs.yml
    with:
      build-id: -${{ matrix.docs.name }}
      scala-version: ${{ inputs.scala-version }}
      module-selector: ${{ matrix.docs.selector }}
  dash:
    needs: compile
    uses: ./.github/workflows/dash.yml
    with:
      scala-version: ${{ inputs.scala-version }}