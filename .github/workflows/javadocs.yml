name: javadocs

on:
  workflow_call:
    inputs:
      scala-version:
        required: false
        type: string
        default: "2.12"
      module-selector:
        required: false
        type: string
        default: ""
      build-id:
        required: false
        type: string
        default: ""

permissions:  # added using https://github.com/step-security/secure-repo
  contents: read

env:
  MAVEN_CLI_OPTS: -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dlicense.skip=true --batch-mode

jobs:
  build-javadocs:
    name: build-javadocs${{ inputs.build-id }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          distribution: 'temurin'
          java-version: '11'
      - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          key: ${{ hashFiles('**/pom.xml') }}-javadocs-${{ inputs.scala-version }}
          path: ~/.m2/repository/
      - name: Set Scala version
        run: ./build/scripts/change-scala-version.sh ${{ inputs.scala-version }}
      - name: Download artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5.0.0
        with:
          name: classes-and-jars-${{ inputs.scala-version }}
      - name: Install artifacts
        run: |
          tar -xf classes.tgz
          mkdir -p ~/.m2/repository/org/locationtech/geomesa
          mv m2-geomesa/* ~/.m2/repository/org/locationtech/geomesa/
      - name: Build scaladocs
        run: mvn generate-sources scala:doc-jar ${{ inputs.module-selector }} $MAVEN_CLI_OPTS
      - name: Build javadocs
        run: mvn generate-sources javadoc:jar $MAVEN_CLI_OPTS -pl :geomesa-arrow-jts
      - name: Remove geomesa artifacts
        if: success() || failure()
        run: rm -rf ~/.m2/repository/org/locationtech/geomesa
